version: "3.6"
services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    platform: linux/amd64
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${MSSQL_PASSWORD:-Password1}
    volumes:
      - mssql_data:/var/lib/mssql/data
  graphql-engine:
    image: hasura/graphql-engine:latest
    ports:
      - "8080:8080"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above ms sql server database to Hasura as a data source. this can be removed/updated based on your needs
      MSSQL_DATABASE_URL: Driver={ODBC Driver 18 for SQL Server};Server=tcp:mssql,1433;Database=tempdb;Uid=sa;Pwd=Password1;Encrypt=optional
      MYSQL_DB_URL: jdbc:mysql://database:3306/demo?user=root
      ## HASURA_GRAPHQL_EE_LICENSE_KEY: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjEiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJIYXN1cmEiLCJzdWIiOiIxK2Rhbm5pY2tAaGFzdXJhLmlvIiwiZXhwIjoxNjkzMTU1MDA2LCJpYXQiOjE2OTA1NjMwMDYsImp0aSI6Ijk5NmI4MzE1LWFhZGQtNGMwYi05MmM5LWY4OWQwNTFhYjQzOCIsImxpY2Vuc2VfZXhwX2F0IjoxNjkzMTU1MDA2LCJncmFjZV9leHBfYXQiOjE2OTMxNTUwMDYsImxpY2Vuc2VfdHlwZSI6InRyaWFsIn0.cuhCx4RUPcAyZpbJyNUlJoJb9Tz7DoULnf-OJGGHdApBlaGsZHKbYHhWRY4XtOmwqvZ3_oA0BRF3NvUyJodVdepFEwOEZnPUXg4sDAap8knBpeFHum0YdVAljpZFxim4R-jglaD54CBYuc38LONueffPDZvI8rvS88KvIrg2gShOjwU197b8rUiF8m5SsFtlJ0RTdnSHH98J0irdvbGMOe5fRfcnu9eZIvW3wp8tjZQRwkK6mk6D4RD1b_dYY4w9Kc_ro407TjF1m9JfUPaLoT1bR3H-82k0VaR1uy2ScwaQQsAiROcnkw4u1U6bdo_uXEvUhD9DdZD6a_oBQC2r1mODeE5jQD4XOvLjvAbkgK8KbwoMPQchVI8uac7s0rWQ8xAxDPPR4nJjvn8hHzJlTG8BxMbbnPDu5YpgbLdfvlKR_FAo9rSSosdHiXTEACkdo4cj__rY635qc80guaQNFrDewiKF5svYZzmjosAB98f6Sk4x0RzyL3fAjaoYqqxb"
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      # enable experimental features
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: "naming_convention"
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
      DB_URL: 'postgres://postgres:postgrespassword@postgres:5432/'
    depends_on:
      data-connector-agent:
        condition: service_healthy
  data-connector-agent:
    image: hasura/graphql-data-connector:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      ## https://quarkus.io/guides/opentelemetry#configuration-reference
      QUARKUS_OPENTELEMETRY_ENABLED: "false"
      ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
volumes:
  pg_data:
  mssql_data: